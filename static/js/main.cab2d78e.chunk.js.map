{"version":3,"sources":["DndReducer.tsx","DndTextArea.tsx","DndLabel.tsx","DragDropLayout.tsx","App.tsx","index.tsx"],"names":["initialState","reducer","state","action","type","id","value","DndContext","React","createContext","DndContextProvider","children","useReducer","dispatch","Provider","DndTextArea","props","useContext","componentName","style","width","height","onChange","e","target","verticalAlign","elemStyle","border","backgroundColor","textAlign","DragDropLayout","useState","log","setLog","layouts","childsLayouts","cols","rowHeight","className","layout","onLayoutChange","console","JSON","stringify","map","DndLabel","i","toUpperCase","x","y","w","h","App","window","parent","screen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cab2d78e.chunk.js","sourcesContent":["import React, { FC, useReducer } from 'react';\n\nexport type Action = {\n  type: 'CHANGE_VALUE' | 'CLEAR_VALUE';\n  id: string;\n  value: string;\n};\nexport type InputDataType = { [index: string]: string };\n\nconst initialState: InputDataType = {};\n\nconst reducer = (state: InputDataType, action: Action) => {\n  switch (action.type) {\n    case 'CHANGE_VALUE':\n      return {\n        ...state,\n        [action.id]: action.value,\n      };\n    case 'CLEAR_VALUE':\n      return {\n        ...state,\n        [action.id]: '',\n      };\n    default:\n      return state;\n  }\n};\n\nexport const DndContext = React.createContext(\n  {} as {\n    state: InputDataType;\n    dispatch: React.Dispatch<Action>;\n  },\n);\n\nexport const DndContextProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DndContext.Provider value={{ state, dispatch }}>\n      {children}\n    </DndContext.Provider>\n  );\n};\n","import { VFC, useContext } from 'react';\nimport { DndContext } from './DndReducer';\n\nconst DndTextArea: VFC<{ componentName: string }> = (props) => {\n  const { dispatch } = useContext(DndContext);\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    dispatch({\n      type: 'CHANGE_VALUE',\n      id: e.target.id,\n      value: e.target.value,\n    });\n  };\n\n  return (\n    <textarea\n      id={props.componentName}\n      style={{ width: 'calc(100% - 6px)', height: 'calc(100% - 6px)' }}\n      onChange={handleChange}\n    ></textarea>\n  );\n};\n\nexport default DndTextArea;\n","import { VFC } from 'react';\n\nconst DndTextArea: VFC<{ componentName: string }> = (props) => {\n  return <span style={{ verticalAlign: 'middle' }}>{props.componentName}</span>;\n};\n\nexport default DndTextArea;\n","import { VFC, useState, useContext } from 'react';\nimport GridLayout from 'react-grid-layout';\nimport { DndContext } from './DndReducer';\nimport DndTextArea from './DndTextArea';\nimport DndLabel from './DndLabel';\n\nconst elemStyle = {\n  border: 'solid',\n  backgroundColor: '#EEEEEE',\n  textAlign: 'center' as 'center',\n};\n\ntype ControlType = 'label' | 'textarea';\n\ntype ChildLayouts = {\n  cols: number;\n  rowHeight: number;\n  width: number;\n  childsLayouts: {\n    i: string;\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n    type?: ControlType;\n  }[];\n};\n\nconst DragDropLayout: VFC<ChildLayouts> = (props) => {\n  const { state } = useContext(DndContext);\n  const [log, setLog] = useState<string>();\n  const { childsLayouts: layouts, cols, rowHeight, width } = props;\n\n  const onLayoutChangeHandler = (layout: GridLayout.Layout[]) => {\n    console.log(JSON.stringify(layout, null, '\\t'));\n    console.log(JSON.stringify(state, null, '\\t'));\n    setLog(\n      JSON.stringify(state, null, '\\t') +\n        '\\n' +\n        JSON.stringify(layout, null, '\\t'),\n    );\n  };\n\n  return (\n    <>\n      <GridLayout\n        className=\"layout\"\n        layout={layouts}\n        cols={cols}\n        rowHeight={rowHeight}\n        width={width}\n        onLayoutChange={onLayoutChangeHandler}\n      >\n        {layouts.map((e) => {\n          if (e?.type === 'label') {\n            return (\n              <div key={e.i} style={elemStyle}>\n                <DndLabel componentName={e.i.toUpperCase()} />\n              </div>\n            );\n          } else {\n            return (\n              <div key={e.i} style={elemStyle}>\n                <DndTextArea componentName={e.i.toUpperCase()} />\n              </div>\n            );\n          }\n        })}\n      </GridLayout>\n      <pre>{log}</pre>\n    </>\n  );\n};\n\nexport default DragDropLayout;\n","import { FC } from 'react';\nimport { DndContextProvider } from './DndReducer';\nimport DragDropLayout from './DragDropLayout';\nimport './App.css';\n\nconst childsLayouts = [\n  { i: 'タイトル1', x: 0, y: 0, w: 2, h: 1, type: 'label' as 'label' },\n  { i: 'b', x: 2, y: 0, w: 6, h: 1 },\n  { i: 'c', x: 2, y: 0, w: 6, h: 2 },\n  { i: 'タイトル2', x: 0, y: 2, w: 2, h: 2, type: 'label' as 'label' },\n  { i: 'e', x: 0, y: 9, w: 5, h: 5 },\n  { i: 'f', x: 5, y: 11, w: 3, h: 3 },\n];\n\nconst App: FC = () => {\n  const layout = {\n    cols: 20,\n    rowHeight: 30,\n    width: window.parent.screen.width,\n    childsLayouts,\n  };\n\n  return (\n    <DndContextProvider>\n      <DragDropLayout {...layout} />\n    </DndContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"react-grid-layout/css/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}